services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.web
    container_name: flask_scraper
    ports:
      - "5500:5500"
    volumes:
      - .:/app
    environment:
      - FLASK_APP=app.run
      - FLASK_ENV=development # Changed to development for hot reload
      - FLASK_DEBUG=1
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - PYTHONUNBUFFERED=1
      - WATCHDOG_TRIGGER_FILE=/app/.reload_trigger
    depends_on:
      - redis
    command: >
      sh -c "watchmedo auto-restart --directory=/app --patterns='*.py' --recursive --signal SIGTERM 
      -- python -m flask run --host=0.0.0.0 --port=5500"
    restart: unless-stopped

  worker:
    platform: linux/amd64
    build:
      context: .
      dockerfile: Dockerfile.worker
    container_name: celery_worker
    shm_size: 2gb
    tmpfs:
      - /tmp:rw,noexec,nosuid,size=1g
    volumes:
      - .:/app
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - PYTHONUNBUFFERED=1
      - DISPLAY=:99
      - CHROMIUM_FLAGS=--no-sandbox --disable-dev-shm-usage
      - WATCHDOG_TRIGGER_FILE=/app/.reload_trigger
    depends_on:
      - redis
    command: >
      sh -c "watchmedo auto-restart --directory=/app --patterns='*.py' --recursive --signal SIGTERM 
      -- celery -A app.tasks worker --loglevel=info --concurrency=1 --pool=solo --without-heartbeat --without-mingle"
    restart: unless-stopped

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    restart: unless-stopped
